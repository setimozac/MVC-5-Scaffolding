@using MyWebsite.Helper
@model MyWebsite.ViewModel.ProductAddModelView

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Product</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductId)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>



    @{string ImageName = "Image";}
    @if (Model.PImagesDb != null)
    {
    for (int i = 0; i < Model.PImagesDb.Count(); i++)
    {
        { ImageName = "Image"; ImageName += i; }
        <div class="form-group ">
                <div class="col-md-10">
                    <div class="img-thumbnail">
                        @Html.GetThumbnail(Model.PImagesDb[i].Image)
                    </div>
                    <input type="file" name=@ImageName accept="image/x-png,image/gif,image/jpeg" />
                </div>
            </div>


}

        for (int i = Model.PImagesDb.Count(); i < 3; i++)
        {
            { ImageName = "Image"; ImageName += i; }
            <div class="form-group">
                <div class="col-md-10">

                    <input type="file" name=@ImageName accept="image/x-png,image/gif,image/jpeg" />
                </div>
            </div>



        }
    }
    else
    {
        <div class="form-group">
            <div class="col-md-10">

                <input type="file" name="Image0" accept="image/x-png,image/gif,image/jpeg" />
                @Html.ValidationMessageFor(model => model.Image0, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">

                <input type="file" name="Image1" accept="image/x-png,image/gif,image/jpeg" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">

                <input type="file" name="Image2" accept="image/x-png,image/gif,image/jpeg" />
            </div>
        </div>
    }


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
